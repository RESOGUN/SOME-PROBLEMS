<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <assembly alias="System.Drawing" name="System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" />
  <data name="logoPictureBox.Image" type="System.Drawing.Bitmap, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
    <value>
        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
        wg5dnZUychQAAAAASUVORK5CYII=
</value>
  </data>
</root>